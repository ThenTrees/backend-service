#name: backend-service-infra
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      # info login for postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
      - ./initdb.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    networks:
      - default

#  backend-service:
#    container_name: backend-service
#    environment:
#      DATABASE_HOST: host.docker.internal
#      DATABASE_PORT: 5432
#      DATABASE_USERNAME: postgres
#      DATABASE_PASSWORD: postgres
#      LOGSTASH_HOST: host.docker.internal:5600
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    networks:
#      - default

  elastic-search:
    image: elasticsearch:7.14.1
    container_name: elasticsearch
    restart: always
    ports:
      - "9200:9200"
    environment:
      discovery.type: single-node
    networks:
      default:

  kibana:
    image: kibana:7.14.1
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOST=http://elastic-search:9200
    networks:
      - default

  logstash:
    image: logstash:7.14.1
    container_name: logstash
    restart: always
    ports:
      - "5600:5600"
      - "5044:5044"
    volumes:
      - ./logstash.conf:/urs/share/logstash/pipeline/logstash.conf
    environment:
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=http://elastic-search:9200
      - XPACK_MONITORING_ENABLED=true
    networks:
      - default

networks:
  default:
    name: backend-service

volumes:
  postgres_data: